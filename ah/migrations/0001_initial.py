# Generated by Django 4.1.4 on 2022-12-30 22:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_mysql.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('3', 'Admin'), ('2', 'Worker'), ('1', 'User')], default=1, max_length=10)),
                ('language', models.CharField(choices=[('3', 'Gujarati'), ('2', 'Hindi'), ('1', 'English')], default=1, max_length=10)),
                ('full_name', models.CharField(default='', max_length=100)),
                ('total_case', models.IntegerField(default=0)),
                ('pending_case', models.IntegerField(default=0)),
                ('solved_case', models.IntegerField(default=0)),
                ('latitude', models.CharField(default='0', max_length=100)),
                ('longitude', models.CharField(default='0', max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Case',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='img')),
                ('lng', models.CharField(default=None, max_length=100)),
                ('lat', models.CharField(default=None, max_length=100)),
                ('date', models.CharField(default='DD-MM-YYYY', max_length=100)),
                ('status', models.CharField(choices=[('Solved', 'Solved'), ('Pending', 'Pending')], default='Pending', max_length=10)),
                ('description', models.TextField(default=None)),
                ('accept', models.IntegerField(default=0)),
                ('rejected_list', django_mysql.models.ListTextField(models.IntegerField(), size=100)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_id', to=settings.AUTH_USER_MODEL)),
                ('worker_id', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='worker_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Udid_Num',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('udid', models.CharField(default='None', max_length=100)),
                ('unum', models.CharField(default='None', max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('complaint_date', models.CharField(default='DD-MM-YYYY', max_length=100)),
                ('complaint_box', models.TextField(default=None)),
                ('case_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_id', to='ah.case')),
                ('worker_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='case_worker_id', to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
